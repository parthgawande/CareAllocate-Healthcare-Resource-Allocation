version: '3.8'
services:
  spark-master:
    build:
      dockerfile: dockerfiles/Dockerfile
    container_name: spark-master
    depends_on:
      - postgres
    ports:
      - "9090:8080"
      - "7077:7077"
    networks:
      - app-network

  spark-worker-1:
    build:
      dockerfile: dockerfiles/Dockerfile3
    container_name: spark-worker-1
    command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    depends_on:
      - spark-master
    environment:
      SPARK_MODE: worker
      SPARK_WORKER_CORES: 2
      SPARK_WORKER_MEMORY: 2g
      SPARK_MASTER_URL: spark://spark-master:7077
    networks:
      - app-network

  spark-worker-2:
    build:
      dockerfile: dockerfiles/Dockerfile3
    container_name: spark-worker-2
    command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    depends_on:
      - spark-master
    environment:
      SPARK_MODE: worker
      SPARK_WORKER_CORES: 2
      SPARK_WORKER_MEMORY: 2g
      SPARK_MASTER_URL: spark://spark-master:7077
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3.13.4-management-alpine
    container_name: rabbitmq
    ports:
      - "5673:5672"
      - "15673:15672"
    networks:
      - app-network

  postgres:
    image: postgres:15.7-alpine3.20
    container_name: postgres
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
    ports:
      - "5433:5432"
    networks:
      - app-network
    volumes:
      - postgres-data:/var/lib/postgresql/data

  dashboard:
    build:
      dockerfile: dockerfiles/Dockerfile2
    container_name: dashboard
    ports:
      - "8080:8501"
    networks:
      - app-network
    depends_on:
      - postgres

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local